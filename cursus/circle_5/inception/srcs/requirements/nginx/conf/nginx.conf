user nginx;
worker_processes auto;
error_log /dev/stdout info; # 에러 로그를 표준 출력으로 출력
error_log /var/log/nginx/error.log; # 에러 로그를 파일로 저장

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

# Includes files with directives to load dynamic modules.
include /etc/nginx/modules/*.conf;

# Include files with config snippets into the root context.
include /etc/nginx/conf.d/*.conf;

# 네트워크 동작 방법과 관련된 설정
events {
        # The maximum number of simultaneous connections that can be opened by
        # a worker process.
        worker_connections 1024; # 하나의 worker process와 연결할 수 있는 개수 
}

http {
        # Includes mapping of file name extensions to MIME types of responses
        # and defines the default type.
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        # Name servers used to resolve names of upstream servers into addresses.
        # It's also needed when using tcpsocket and udpsocket in Lua modules.
        #resolver 1.1.1.1 1.0.0.1 2606:4700:4700::1111 2606:4700:4700::1001;

        # Don't tell nginx version to the clients. Default is 'on'.
        server_tokens off;

        # Specifies the maximum accepted body size of a client request, as
        # indicated by the request header Content-Length. If the stated content
        # length is greater than this size, then the client receives the HTTP
        # error code 413. Set to 0 to disable. Default is '1m'.
        client_max_body_size 1m;

        # Sendfile copies data between one FD and other from within the kernel,
        # which is more efficient than read() + write(). Default is off.
        sendfile on;

        # Causes nginx to attempt to send its HTTP response head in one packet,
        # instead of using partial frames. Default is 'off'.
        tcp_nopush on;

        # Enables the specified protocols. Default is TLSv1 TLSv1.1 TLSv1.2.
        # TIP: If you're not obligated to support ancient clients, remove TLSv1.1.
        # if you use https TLS sould be mentioned!
        ssl_protocols TLSv1.2 TLSv1.3;

        # Path of the file with Diffie-Hellman parameters for EDH ciphers.
        # TIP: Generate with: `openssl dhparam -out /etc/ssl/nginx/dh2048.pem 2048`
        #ssl_dhparam /etc/ssl/nginx/dh2048.pem;

        # Specifies that our cipher suits should be preferred over client ciphers.
        # Default is 'off'.
        ssl_prefer_server_ciphers on;

        # Enables a shared SSL cache with size that can hold around 8000 sessions.
        # Default is 'none'.
        ssl_session_cache shared:SSL:2m;

        # Specifies a time during which a client may reuse the session parameters.
        # Default is '5m'.
        ssl_session_timeout 1h;

        # Disable TLS session tickets (they are insecure). Default is 'on'.
        ssl_session_tickets off;

        # Enable gzipping of responses.
        gzip on; # 웹 서버에서 압축을 활성화

        # Set the Vary HTTP header as defined in the RFC 2616. Default is 'off'.
        gzip_vary on; # 클라이언트에게 응답을 압축했음을 알리기 위한 HTTP Vary 헤더를 설정

        # Helper variable for proxying websockets.
        map $http_upgrade $connection_upgrade {
                default upgrade;
                '' close;
        }

        # Specifies the main log format.
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

        # Sets the path, format, and configuration for a buffered log write.
        # access_log /var/log/nginx/access.log main;
        access_log /dev/stdout;

        # This is a default site configuration which will simply return 404, preventing
        # chance access to any other virtualhost.
server {
        listen 443 ssl;
        listen [::]:443 ssl;

        server_name daewoole.42.fr;

        ssl_protocols TLSv1.3;
        ssl_certificate /etc/nginx/ssl/localhost.daewoole.crt;
        ssl_certificate_key /etc/nginx/ssl/localhost.daewoole.key;

        root /var/www;
        location / {
                index index.php;
                autoindex on;
                try_files $uri $uri/ =404;
        }
        
        location ~ \.php$ {
                fastcgi_pass wordpress:9000;
                fastcgi_index index.php;
                include fastcgi_params;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        }
}
}